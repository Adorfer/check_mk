#!/bin/bash
#/usr/lib/check_mk_agent/local
export LANG=de_DE.UTF-8

function confline # get first line from file $1 mathing $2, stripped of # and ; comment lines, stripped spaces and tabs down to spaces, remove trailing ;
{
 echo $(cat $1|grep -v '^$\|^\s*\#'|sed -e "s/[[:space:]]\+/ /g"|sed s/^\ //|sed s/\;//|grep -i "$2"|head -n 1)
}

function ati # ipv4 to longint
{
 ip4=$1; ipno=0
 for (( i=0 ; i<4 ; ++i )); do
   ((ipno+=${ip4%%.*}*$((254**$((3-${i})))))) # .0 .255 should not be counted
   ip4=${ip4#*.}
  done
 echo $ipno
}

BASE=/opt/eulenfunk/supernode
. ${BASE}/supernode.vars
. ${BASE}/supernode.config

## static data
kernel=$(uname -r);
release=$(lsb_release -ds);
latestbootkernel=$(ls -t /boot/vmlinuz-* | sed "s/\/boot\/vmlinuz-//g" | sort -Vr | head -n1)

## ubuntu-Status
echo "0 Ubuntu-Release Ubuntu-Release=$release; $release - Kernel $kernel; Boot $latestbootkernel"

## Batman-Advanced 
bat_version=$(batctl -v)
bat_adv_v=$(batctl -v|cut -d" " -f4|tr -d "]")
bat_ctl_v=$(batctl -v|cut -d" " -f2)
batadvequal=2
if [ "$bat_adv_v" == "$bat_ctl_v" ] ; then
  batadvequal=1
 fi

echo "P Batman-Version kernelvsctl=$batadvequal;1:1;0:2 versions:$bat_version"
#list=$(ls -F /sys/kernel/debug/batman_adv|grep /)
list=$(ip link|grep ",UP,"|cut -d" " -f2|tr -d ":")
if [[ $list != *"bat0"* ]]; then
  list="$list bat0"
 fi
for b in $list; do
  z=$( batctl -m $b o 2> /dev/null | wc -l )
  if [ $z -ge 1 ]; then
    router=$(($(batctl -m $b o|grep "^\ \*"|wc -l)-0 ))
    clients=$(batctl -m $b tg| grep "^\ \*"|grep -cEo "\[.*W.*\]+")
    owngw=$(batctl -m $b gw|cut -d" " -f1|sed s/server/1/|sed s/off/0/)
    gateways=$(($(batctl -m $b gwl|grep -A 999 outgoingIf|grep -v outgoingIf|wc -l ) + $owngw))
    claims=$(batctl -m $b cl|wc -l )
#    ips=$(( $(batctl -m $b dc 2> /dev/null |wc -l) - 2))
    wlow=$(( $router * 20 / 100 ))
    clow=$(( $router * 5 / 100 ))
    wlimit=$(( $router * 5 ))
    climit=$(( $router * 10 ))
    echo "P Batman-$b Router=$router.0;5:350;1:500|Clients=$clients.0;$wlow.0:$wlimit.0;$clow.0:$climit.0|Claims=$claims.0;0:9999;0:9999|Gateways=$gateways.0;0:3;0:5";
   fi;
 done

## Fastd
fastd_version=$(fastd -v|cut -d ' ' -f 2);
echo "0 Fastd_Version Version=$fastd_version; Fastd $fastd_version ";
fastdp=/etc/fastd
list=$(ls -F $fastdp|grep /|cut -d '/' -f 1)
for fasti in $list ; do
  clients=$(nc -U $(cat $fastdp/$fasti/fastd.conf|grep -v '^$\|^\s*\#'|sed -e "s/[[:space:]]\+/ /g"|sed s/^\ //|sed s/\;//|grep -i 'status socket'|cut -d '"' -f 2)|grep '"established"' -o|wc -l);
  interface=$(confline $fastdp/$fasti/fastd.conf interface|cut -d '"' -f 2)
  mtu=$(confline $fastdp/$fasti/fastd.conf mtu|cut -d ' ' -f 2|cut -d ';' -f1)
  port=$(confline $fastdp/$fasti/fastd.conf bind|cut -d ':' -f 2|cut -d ' ' -f1)
  limit=$(confline $fastdp/$fasti/fastd.conf 'peer limit'|cut -d ' ' -f 3|cut -d ';' -f1)
  climit=$(( $limit * 95 / 100 ))
  wlimit=$(( $limit * 90 / 100 ))
  clow=$(( $limit / 100 ))
  wlow=$(( $limit * 5 / 100 ))
  echo "P Fastd_Clients_$interface Clients=$clients.0;$wlow:$wlimit;$clow:$climit; Interface: $interface, Port: $port, MTU: $mtu, Peer Limit: $limit"
 done

## radvd check (warum auch immer da 2 Prozesse laufen, es scheint so sein zu mÃ¼ssen)
  radvdrunning=$(ps ax |grep radvd.pid|grep -v grep|wc -l)
  radvdstatus=$(echo $(ps ax |grep radvd.pid|grep -v grep|cut -c16)|tr -d "/n"|tr -d " ")
  echo "P radvd radvdprocs=$radvdrunning.0;2:2;2:2 radvdstatus=$radvdstatus";

## Logins
logincount=$(who|wc -l)
logout="0 LocalUser CurrentLogins=$logincount.0; CurrentLogins:$logincount"
i=0
TFILE="/tmp/$(basename $0).$$.tmp"
who -u>$TFILE
while read line; do
  i=$(( i + 1))
  line=$(echo $line|sed s/\ +//|tr -s " ")
  user=$(echo $line|cut -d" " -f1)
  tty=$(echo $line|cut -d" " -f2)
  idle=$(echo $line|cut -d" " -f6)
  ip=$(echo $line|cut -d" " -f8)
  logout="$logout\n login-$i-user:$user login-$i-tty:$tty login-$i-idle:$idle login-$i-source:$ip"
 done<$TFILE
rm $TFILE
echo "$logout"
