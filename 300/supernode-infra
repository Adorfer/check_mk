#!/bin/bash
#/usr/lib/check_mk_agent/local
export LANG=de_DE.UTF-8

function confline # get first line from file $1 mathing $2, stripped of # and ; comment lines, stripped spaces and tabs down to spaces, remove trailing ;
{
 echo $(cat $1|grep -v '^$\|^\s*\#'|sed -e "s/[[:space:]]\+/ /g"|sed s/^\ //|sed s/\;//|grep -i "$2"|head -n 1)
}

function ati # ipv4 to longint
{
 ip4=$1; ipno=0
 for (( i=0 ; i<4 ; ++i )); do
   ((ipno+=${ip4%%.*}*$((254**$((3-${i})))))) # .0 .255 should not be counted
   ip4=${ip4#*.}
  done
 echo $ipno
}

BASE=/opt/eulenfunk/supernode
. ${BASE}/supernode.vars
. ${BASE}/supernode.config

## isc-dhcpd-server
# leasescheck
# needs script https://github.com/eulenfunk/scripts/blob/master/dhcpleases
# needs dhtest from https://github.com/saravana815/dhtest compiled
  dhcpconf=/etc/dhcp/dhcpd.conf
  dhcpinterface=$(confline $dhcpconf "interface "|cut -d" " -f2)
  dhcprunning=$(ps ax|grep dhcpd.pid|grep dhcpd.conf|wc -l)
  leasesage=$((($(date +%s) - $(date +%s -r "/var/lib/dhcp/dhcpd.leases")) / 60 ))
  dhcprange=$(confline $dhcpconf range)
  dhcpstart=$(echo $dhcprange|cut -d" " -f2)
  dhcpend=$(echo $dhcprange|cut -d" " -f3)
  totalleases=$(($(ati $dhcpend) - $(ati $dhcpstart)))
if [ -r /opt/eulenfunk/dhcpleases ] ; then
  activeleases=$(/opt/eulenfunk/dhcpleases|grep "^| Total"|cut -d":" -f2|sed s/\ //)
  remainingleases=$(($totalleases - $activeleases))
 fi
  dhtest=1
if [ -r /opt/eulenfunk/dhtest ] ; then
  pushd /tmp >/dev/null
  clientmac=ca:b1:e9:fa:b1:77
  dhtestack=$(/opt/eulenfunk/dhtest -i $dhcpinterface -m $clientmac -h check_mk -T 7|grep "DHCP ack received")
  if [ -n "$dhtestack" ] ; then
    dhtest=$(echo $dhtestack|wc -l)
    dhtestip=$(echo $dhtestack|cut -d":" -f2)
   fi
  rm -f "$clientmac"
  popd >/dev/null
 fi
  dhcpstatus=$leasesage$dhcprunning$dhtest
  actwarn=$(($totalleases * 75 / 100))
  actcrit=$(($totalleases * 90 / 100))
  echo "P Dhcp-Leases serverstatus=$dhcpstatus.0;11:3011;11:12011|active-leases=$activeleases.0;5:$actwarn;1:$actcrit active:$activeleases remaining:$remainingleases pool=$totalleases dhcpdrunning=$dhcprunning leasesage=$leasesage dhtest=$dhtest $dhtestack";

## FFRL Uplinkcheck
  testipv6a=2001:4860:4860::8888 # google-dns
  testipv6b=2620:0:ccc::2 # opendns
  testhost=www.google.com
  pingcount=4
  pingdelay="0.7"
  wgettimeout=3
  wgettries=2
  wgeturl="http://www.google.de"
  br0ipv4=$(ip addr show br0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)

  if [ ! "$SUPERNODE_IPV4_TRANS_ADDR" == "#" ]; then
    konzintv4=$(echo $SUPERNODE_IPV4_TRANS_ADDR|cut -d"." -f1-3).254
    konzv4=$(ping -c$pingcount -i $pingdelay -I $SUPERNODE_TRANS_INTERFACE $konzintv4 >/dev/null 2>1;echo $?)
   else
    konzv4="0"
   fi
  if [ ! "$SUPERNODE_IPV6_PREFIX" == "#" ]; then
    konzintv6=$(echo $SUPERNODE_IPV6_PREFIX|cut -d"/" -f1)1
    konzv6=$(ping6 -c$pingcount -i $pingdelay -I $SUPERNODE_TRANS_INTERFACE $konzintv6 >/dev/null 2>1; echo $?)
    ffrlv6=$(ping6 -c$pingcount -i $pingdelay -I $SUPERNODE_TRANS_INTERFACE $testipv6a >/dev/null 2>1; echo $?)
    if [ ! "$ffrlv6" == "0" ]; then
      ffrlv6=$(ping6 -c$pingcount -i $pingdelay -I $SUPERNODE_TRANS_INTERFACE $testipv6b >/dev/null 2>1; echo $?)
     fi
   else
    konzv6="0"
    ffrlv6="0"
   fi
  ffrlv4=$(wget -t$wgettries -T$wgettimeout --bind-address=$br0ipv4 --spider $wgeturl>/dev/null 2>1;echo $?)
  v4wgettime=$((time wget -t$wgettries -T$wgettimeout --bind-address=$br0ipv4 --spider $wgeturl ) 2>&1 | grep real | awk '{print $2}' | sed 's/0m//'| tr -d ".s" | sed -e 's/^0*//')
  v6wgettime=$((time wget -t$wgettries -T$wgettimeout --bind-address=$br0ipv6 --spider $wgeturl ) 2>&1 | grep real | awk '{print $2}' | sed 's/0m//'| tr -d ".s" | sed -e 's/^0*//')
  echo "P ffrl uplinkfail=$konzv6$konzv4$ffrlv6$ffrlv4.0;0:0;0:0 wgettimev4=$v4wgettime.0;0:200;0:1100 wgettimev6=$v6wgettime.0;0:200;0:1100 vPingErrors KonzV6:$konzv6 KonzV4:$konzv4 PublicV6:$ffrlv6 PublicV4:$ffrlv4"

## DNS check
# dnsmasq running
  dnsmasqrunning=$(ps ax |grep dnsmasq.pid|grep resolv.conf|wc -l)
  if [ "$dnsmasqrunning" == "1" ]; then
    ipv4=$(ip -4 a s br0|grep inet|cut -d" " -f6|cut -d"/" -f1|head -1)
    ipv6=$(ip -6 a s br0|grep inet|grep -v "deprecated"|cut -d" " -f6|cut -d"/" -f1|head -1)
    dns4via4=$(dig @$ipv4 A $testhost +time=2|grep -v ";"|grep A|grep $testhost|head -1|wc -l)
    dns6via4=$(dig @$ipv4 AAAA $testhost +time=2|grep -v ";"|grep AAAA|grep $testhost|head -1|wc -l)
    dns4via6=$(dig @$ipv6 A $testhost +time=2|grep -v ";"|grep A|grep $testhost|head -1|wc -l)
    dns6via6=$(dig @$ipv6 AAAA $testhost +time=2|grep -v ";"|grep AAAA|grep $testhost|head -1|wc -l)
   else
    dns4via4=0; dns6via4=0; dns4via6=0; dns6via6=0;
   fi
  dnsstatus=$dnsmasqrunning$dns4via4$dns6via6$dns4via6$dns6via4
  echo "P Dns dnsstatus=$dnsstatus.0;11111:11111;11111:11111 dnsmasqrunning=$dnsmasqrunning dns4via4=$dns4via4 dns6via6=$dns6via6 dns4via6=$dns4via6 dns6via4=$dns6via4";

